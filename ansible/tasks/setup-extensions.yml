# postgis
- name: postgis - download & install dependencies
  apt:
    pkg:
      - libgeos-dev
      - libproj-dev
      - libgdal-dev
      - libjson-c-dev
      - libxml2-dev
      - libboost-all-dev
      - libcgal-dev
      - libmpfr-dev
      - libgmp-dev
      - cmake
    update_cache: yes
    cache_valid_time: 3600

- name: postgis - download SFCGAL dependency
  get_url:
    url: "https://gitlab.com/Oslandia/SFCGAL/-/archive/v{{ sfcgal_release }}/SFCGAL-v{{ sfcgal_release }}.tar.gz"
    dest: /tmp/SFCGAL-v{{ sfcgal_release }}.tar.gz
    checksum: "{{ sfcgal_release_checksum }}"

- name: postgis - unpack SFCGAL
  unarchive:
    remote_src: yes
    src: /tmp/SFCGAL-v{{ sfcgal_release }}.tar.gz
    dest: /tmp
  become: yes

- name: postgis - compile SFCGAL
  shell:
    cmd: "cmake ."
    chdir: /tmp/SFCGAL-v{{ sfcgal_release }}
  become: yes

- name: postgis - build SFCGAL
  make:
    chdir: /tmp/SFCGAL-v{{ sfcgal_release }}
  become: yes

- name: postgis - install SFCGAL
  make:
    chdir: /tmp/SFCGAL-v{{ sfcgal_release }}
    target: install
  become: yes

- name: postgis - download latest release
  get_url:
    url: "https://download.osgeo.org/postgis/source/postgis-{{ postgis_release }}.tar.gz"
    dest: /tmp/postgis-{{ postgis_release }}.tar.gz
    checksum: "{{ postgis_release_checksum }}"

- name: postgis - unpack archive
  unarchive:
    remote_src: yes
    src: /tmp/postgis-{{ postgis_release }}.tar.gz
    dest: /tmp
  become: yes

- name: postgis - configure
  shell:
    cmd: "./configure --without-protobuf --with-sfcgal"
    chdir: /tmp/postgis-{{ postgis_release }}
  become: yes

- name: postgis - build
  make:
    chdir: /tmp/postgis-{{ postgis_release }}
  become: yes

- name: postgis - install
  make:
    chdir: /tmp/postgis-{{ postgis_release }}
    target: install
  become: yes

# pgTAP
- name: pgTAP - download latest release
  get_url:
    url: "https://github.com/theory/pgtap/archive/v{{ pgtap_release }}.tar.gz"
    dest: /tmp/pgtap-{{ pgtap_release }}.tar.gz
    checksum: "{{ pgtap_release_checksum }}"

- name: pgTAP - unpack archive
  unarchive:
    remote_src: yes
    src: /tmp/pgtap-{{ pgtap_release }}.tar.gz
    dest: /tmp
  become: yes

- name: pgTAP - install
  make:
    chdir: /tmp/pgtap-{{ pgtap_release }}
    target: install
  become: yes

# pg_cron
- name: pg_cron - download latest release
  get_url:
    url: "https://github.com/citusdata/pg_cron/archive/refs/tags/v{{ pg_cron_release }}.tar.gz"
    dest: /tmp/pg_cron-{{ pg_cron_release }}.tar.gz
    checksum: "{{ pg_cron_release_checksum }}"

- name: pg_cron - unpack archive
  unarchive:
    remote_src: yes
    src: /tmp/pg_cron-{{ pg_cron_release }}.tar.gz
    dest: /tmp
  become: yes

- name: pg_cron - build
  make:
    chdir: /tmp/pg_cron-{{ pg_cron_release }}
  become: yes

- name: pg_cron - install
  make:
    chdir: /tmp/pg_cron-{{ pg_cron_release }}
    target: install
  become: yes

- name: pg_cron - set cron.database_name
  become: yes
  shell:
    cmd: echo "cron.database_name = 'postgres'" >> /etc/postgresql/postgresql.conf

# pgAudit
- name: pgAudit - download & install dependencies
  apt:
    pkg:
      - libssl-dev
      - libkrb5-dev
    update_cache: yes
    install_recommends: no

- name: pgAudit - download latest release
  get_url:
    url: "https://github.com/pgaudit/pgaudit/archive/refs/tags/{{ pgaudit_release }}.tar.gz"
    dest: /tmp/pgaudit-{{ pgaudit_release }}.tar.gz
    checksum: "{{ pgaudit_release_checksum }}"

- name: pgAudit - unpack archive
  unarchive:
    remote_src: yes
    src: /tmp/pgaudit-{{ pgaudit_release }}.tar.gz
    dest: /tmp
  become: yes

- name: pgAudit - build
  make:
    chdir: /tmp/pgaudit-{{ pgaudit_release }}
    target: check
    params:
      USE_PGXS: 1
  become: yes

- name: pgAudit - install
  make:
    chdir: /tmp/pgaudit-{{ pgaudit_release }}
    target: install
    params:
      USE_PGXS: 1
  become: yes

# pgjwt
- name: pgjwt - download from master branch
  git:
    repo: https://github.com/michelp/pgjwt.git
    dest: /tmp/pgjwt
    version: master

- name: pgjwt - install
  make:
    chdir: /tmp/pgjwt
    target: install
  become: yes

# pgsql-http
- name: pgsql-http - libcurl4 package
  apt:
    pkg:
      - libcurl4
    state: absent

- name: pgsql-http - download & install dependencies
  apt:
    pkg:
      - libcurl4-gnutls-dev
    update_cache: yes
    install_recommends: yes

- name: pgsql-http - download latest release
  get_url:
    url: "https://github.com/pramsey/pgsql-http/archive/refs/tags/v{{ pgsql_http_release }}.tar.gz"
    dest: /tmp/pgsql_http-{{ pgsql_http_release }}.tar.gz
    checksum: "{{ pgsql_http_release_checksum }}"

- name: pgsql-http - unpack archive
  unarchive:
    remote_src: yes
    src: /tmp/pgsql_http-{{ pgsql_http_release }}.tar.gz
    dest: /tmp
  become: yes

- name: pgsql-http - build
  make:
    chdir: /tmp/pgsql-http-{{ pgsql_http_release }}
  become: yes

- name: pgsql-http - install
  make:
    chdir: /tmp/pgsql-http-{{ pgsql_http_release }}
    target: install
  become: yes

# plpgsql_check
- name: plpgsql_check - download & install dependencies
  apt:
    pkg:
      - libicu-dev
    update_cache: yes
    install_recommends: no

- name: plpgsql_check - download latest release
  get_url:
    url: "https://github.com/okbob/plpgsql_check/archive/refs/tags/v{{ plpgsql_check_release }}.tar.gz"
    dest: /tmp/plpgsql_check-{{ plpgsql_check_release }}.tar.gz
    checksum: "{{ plpgsql_check_release_checksum }}"

- name: plpgsql_check - unpack archive
  unarchive:
    remote_src: yes
    src: /tmp/plpgsql_check-{{ plpgsql_check_release }}.tar.gz
    dest: /tmp
  become: yes

- name: plpgsql_check - clean
  make:
    chdir: /tmp/plpgsql_check-{{ plpgsql_check_release }}
    target: clean
  become: yes

- name: plpgsql_check - install
  make:
    chdir: /tmp/plpgsql_check-{{ plpgsql_check_release }}
    target: install
  become: yes

# pg-safeupdate
- name: pg-safeupdate - download latest release
  get_url:
    url: "https://github.com/eradman/pg-safeupdate/archive/refs/tags/{{ pg_safeupdate_release }}.tar.gz"
    dest: /tmp/pg_safeupdate-{{ pg_safeupdate_release }}.tar.gz
    checksum: "{{ pg_safeupdate_release_checksum }}"

- name: pg-safeupdate - unpack archive
  unarchive:
    remote_src: yes
    src: /tmp/pg_safeupdate-{{ pg_safeupdate_release }}.tar.gz
    dest: /tmp
  become: yes

- name: pg-safeupdate - build
  make:
    chdir: /tmp/pg-safeupdate-{{ pg_safeupdate_release }}
  become: yes

- name: pg-safeupdate - install
  make:
    chdir: /tmp/pg-safeupdate-{{ pg_safeupdate_release }}
    target: install
  become: yes

# timescaledb
- name: timescaledb - download & install dependencies
  apt:
    pkg:
      - cmake
    update_cache: yes
    install_recommends: yes

- name: timescaledb - download latest release
  git:
    repo: https://github.com/timescale/timescaledb.git
    dest: /tmp/timescaledb
    version: "{{ timescaledb_release }}"
  become: yes

- name: timescaledb - bootstrap
  shell:
    cmd: "./bootstrap -DAPACHE_ONLY=1 -DREGRESS_CHECKS=OFF"
    chdir: /tmp/timescaledb
  become: yes

- name: timescaledb - build
  make:
    chdir: /tmp/timescaledb/build
  become: yes

- name: timescaledb - install
  make:
    chdir: /tmp/timescaledb/build
    target: install
  become: yes

# pljava
- name: pljava - download & install dependencies
  apt:
    pkg:
      - maven
      - default-jre
      - default-jdk
    update_cache: yes
    install_recommends: yes

- name: pljava - download latest release
  get_url:
    url: https://github.com/tada/pljava/archive/V{{ pljava_release }}.tar.gz
    dest: /tmp/pljava-{{ pljava_release }}.tar.gz
    checksum: "{{ pljava_release_checksum }}"

- name: pljava - unpack archive
  unarchive:
    remote_src: yes
    src: /tmp/pljava-{{ pljava_release }}.tar.gz
    dest: /tmp
  become: yes

- name: pljava - build
  become: yes
  shell:
    cmd: mvn clean install
    chdir: /tmp/pljava-{{ pljava_release }}

- name: pljava - install
  become: yes
  shell:
    cmd: java -jar pljava-packaging/target/pljava-pg13.jar
    chdir: /tmp/pljava-{{ pljava_release }}

- name: pljava - remove build dependencies
  apt:
    pkg:
      - maven
      - default-jre
      - default-jdk
    state: absent

- name: pljava - install headless jdk
  apt:
    pkg:
      - default-jdk-headless
    update_cache: yes
    install_recommends: no

- name: pljava - set pljava.libjvm_location
  become: yes
  shell:
    cmd: echo "pljava.libjvm_location = '/usr/lib/jvm/java-11-openjdk-{{ platform }}/lib/server/libjvm.so'" >> /etc/postgresql/postgresql.conf

- name: pljava - remove ~/.m2 directory
  become: yes
  file:
    path: ~/.m2
    state: absent

# plv8
- name: plv8 - download & install dependencies
  apt:
    pkg:
      - build-essential
      - ca-certificates
      - curl
      - git-core
      - gpp
      - cpp
      - pkg-config
      - apt-transport-https
      - cmake
      - libc++-dev
      - libc++abi-dev
      - libc++1
      - libglib2.0-dev
      - libtinfo5
      - libc++abi1
      - ninja-build
      - python
    update_cache: yes
    install_recommends: no

- name: plv8 - download latest release
  git:
    repo: https://github.com/plv8/plv8.git
    dest: /tmp/plv8
    version: 3656177d384e3e02b74faa8e2931600f3690ab59
  become: yes

- name: Create a symbolic link
  file:
    src: /lib/aarch64-linux-gnu/libc++.so.1
    dest: /lib/aarch64-linux-gnu/libc++.so
    state: link
  when: platform == "arm64"

- name: plv8 - build
  make:
    chdir: /tmp/plv8
  become: yes

- name: plv8 - install
  make:
    chdir: /tmp/plv8
    target: install
  become: yes