- name: AWS CLI dep
  apt:
    pkg:
      - unzip
    install_recommends: no

- name: AWS CLI (arm)
  get_url:
    url: "https://awscli.amazonaws.com/awscli-exe-linux-aarch64-{{ aws_cli_release }}.zip"
    dest: "/tmp/awscliv2.zip"
  when: platform == "arm64"

- name: AWS CLI (x86)
  get_url:
    url: "https://awscli.amazonaws.com/awscli-exe-linux-x86_64-{{ aws_cli_release }}.zip"
    dest: "/tmp/awscliv2.zip"
  when: platform == "amd64"

- name: AWS CLI - expand
  unarchive:
    remote_src: yes
    src: "/tmp/awscliv2.zip"
    dest: "/tmp"

- name: AWS CLI - install
  shell: "/tmp/aws/install"
  become: true

- name: UFW - Allow connections to exporter for prometheus
  ufw:
    rule: allow
    port: "9187"

- name: create directories
  file:
    state: directory
    path: "{{ item }}"
    owner: root
    mode: '0700'
  become: yes
  with_items:
    - /opt/postgres_exporter
    - /etc/systemd/system/exporter.service.d

- name: download postgres exporter
  get_url:
    url: "https://github.com/prometheus-community/postgres_exporter/releases/download/v{{ postgres_exporter_release }}/postgres_exporter-{{ postgres_exporter_release }}.linux-arm64.tar.gz"
    dest: /tmp/postgres_exporter.tar.gz

- name: expand postgres exporter
  unarchive:
    remote_src: yes
    src: /tmp/postgres_exporter.tar.gz
    dest: /opt/postgres_exporter
    extra_opts: [--strip-components=1]
  become: yes

- name: exporter create a service
  template:
    src: files/exporter.service.j2
    dest: /etc/systemd/system/postgres_exporter.service

- name: exporter copy over queries
  template:
    src: files/queries.yml.j2
    dest: /opt/postgres_exporter/queries.yml

- name: exporter enable service
  systemd:
    enabled: yes
    name: postgres_exporter
    daemon_reload: yes

# supautils
- name: supautils - download latest release
  get_url:
    url: "https://github.com/supabase/supautils/archive/refs/tags/v{{ supautils_release }}.tar.gz"
    dest: /tmp/supautils-{{ supautils_release }}.tar.gz
    checksum: "{{ supautils_release_checksum }}"

- name: supautils - unpack archive
  unarchive:
    remote_src: yes
    src: /tmp/supautils-{{ supautils_release }}.tar.gz
    dest: /tmp
  become: yes

- name: supautils - build
  make:
    chdir: /tmp/supautils-{{ supautils_release }}
  become: yes

- name: supautils - install
  make:
    chdir: /tmp/supautils-{{ supautils_release }}
    target: install
  become: yes

- name: supautils - set supautils.reserved_roles
  become: yes
  lineinfile:
    path: /etc/postgresql/postgresql.conf
    state: present
    line: supautils.reserved_roles = 'supabase_admin, supabase_auth_admin, supabase_storage_admin, dashboard_user, pgbouncer, service_role, authenticator, authenticated, anon'

- name: supautils - set supautils.reserved_memberships
  become: yes
  lineinfile:
    path: /etc/postgresql/postgresql.conf
    state: present
    line: supautils.reserved_memberships = 'pg_read_server_files, pg_write_server_files, pg_execute_server_program'

- name: supautils - add supautils to shared_preload_libraries
  become: yes
  replace:
    path: /etc/postgresql/postgresql.conf
    regexp: shared_preload_libraries = '
    replace: shared_preload_libraries = 'supautils,